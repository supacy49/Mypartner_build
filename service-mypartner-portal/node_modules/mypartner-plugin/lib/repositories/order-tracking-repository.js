"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Moment = require("moment");
const base_request_repository_1 = require("./base-request-repository");
require('tls').DEFAULT_CIPHERS = 'RSA';
class OrderTrackingRepository extends base_request_repository_1.BaseRequestRepository {
    constructor() {
        super(...arguments);
        this.registerMethod = () => {
            this.server.method({
                name: 'Regis.orderTracking',
                method: this.orderTracking,
                options: {
                    callback: false
                }
            });
        };
        this.orderTracking = (request) => {
            let profileQueryOptions = {
                reqDealerCode: request.payload.reqDealerCode,
                reqOrderNo: request.payload.reqOrderNo,
                sapPoNo: request.payload.sapPoNo,
                orderDateFrom: request.payload.orderDateFrom,
                orderDateTo: request.payload.orderDateTo,
                sapOrderNo: request.payload.sapOrderNo
            };
            return this._queryOrderTracking(request.url.query, profileQueryOptions);
        };
        this._queryOrderTracking = (request, profileQueryOptions) => {
            let reqOptions = this._getReqOptionsPost(request);
            let now = Moment();
            reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer';
            reqOptions['rejectUnauthorized'] = false;
            reqOptions['uri'] = this.options['baseUrl'] + this.options.urlList['x-path-orderTracking'];
            reqOptions['headers']['Content-Type'] = 'application/json';
            reqOptions['body'] = {
                locType: '',
                reqDealerCode: profileQueryOptions.reqDealerCode,
                matCode: '',
                reqOrderNo: profileQueryOptions.reqOrderNo,
                sapInvNo: '',
                sapPoNo: profileQueryOptions.sapPoNo,
                paymentMethod: '',
                createdBy: '',
                orderDateFrom: profileQueryOptions.orderDateFrom,
                orderDateTo: profileQueryOptions.orderDateTo,
                reqStatus: '',
                reqOrderGroup: '',
                sapOrderNo: profileQueryOptions.sapOrderNo
            };
            reqOptions['json'] = true;
            const loggerName = 'tdm-service';
            return this.sendRequest(reqOptions, loggerName);
        };
    }
}
exports.OrderTrackingRepository = OrderTrackingRepository;
//# sourceMappingURL=order-tracking-repository.js.map