import * as Bluebird from "bluebird";
import * as Moment from 'moment'
import {BaseRequestRepository} from "./base-request-repository"
import {LoginParams, IRepository, IRequest} from "./../interfaces"
require('tls').DEFAULT_CIPHERS= 'RSA'

export class LoginRepository extends BaseRequestRepository implements IRepository {

    public registerMethod = (): void => {
        this.server.method({
            name: 'Regis.login',
            method: this.login,
            options: {
              callback: false
            }
        })
    }

    private login = (request: any) => {
        let profileQueryOptions: LoginParams = {
          tokenID: request.payload.tokenID
        }
        
        return this._queryLogin(request, profileQueryOptions)
    }
    
    private _queryLogin = (request: IRequest, profileQueryOptions: LoginParams) => {
        let reqOptions = this._getReqOptionsPost(request)
        let now = Moment()
        reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
        reqOptions['uri'] = this.options['authUrl'] + this.options.urlList['x-path-login']
        reqOptions['headers']['Content-Type'] = 'application/json'
    
        reqOptions['body'] = {
          tokenID: profileQueryOptions.tokenID
        }
    
        reqOptions['json'] = true
        const loggerName = 'mychannel-service'
        return this.sendRequest(reqOptions, loggerName)
    }

    // private _queryLogin = (request: IRequest, profileQueryOptions: LoginParams) => {
    //     let reqOptions = this._getReqOptionsPost(request)
    //     let now = Moment()
    //     reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
    //     reqOptions['uri'] = this.options['authUrl'] + this.options.urlList['x-path-login']
    //     reqOptions['headers']['Content-Type'] = 'application/json'
    
    //     reqOptions['body'] = {
    //       tokenID: profileQueryOptions.tokenID
    //     }
    
    //     reqOptions['json'] = true
    //     const loggerName = 'mychannel-service'
    //     if (profileQueryOptions.tokenID === "DPW0euwjaBWCEDI54e9meuXdrwV+4tlEpYDDlpFku4GTjc6QnJBGZ0fEqBVzwn023VRjHDeRcD5goDp/tMJP9LizNxWr7nLBxokqT3+LqvMpqtZjVsfnqTpRQS4iHx3A"){
    //       console.log('cross login')
    //       let opt = this.options
    //       var promise = new Promise(function(resolve, reject) {
    //         var resp = {
    //           body: { 
    //             "resultCode":"20000",
    //             "resultDescription":"Success",
    //             "developerMessage":"Success",
    //             "data":{
    //               "accessToken": opt.token['access-token'],
    //               "refreshToken": opt.token['refresh-token'],
    //               "redirectURL":"/"
    //             }
    //           }
    //         }
    //         resolve(resp)
    //       });
    //       return promise.then(this._validateJsonObject)
    //     } else {
    //       return this.sendRequest(reqOptions, loggerName)
    //     }
    // }

}
