import * as Bluebird from "bluebird";
import * as Moment from 'moment'
import {BaseRequestRepository} from "./base-request-repository"
import {getProfileInfoParams, IRepository, IRequest} from "./../interfaces"
require('tls').DEFAULT_CIPHERS= 'RSA'

export class ProfileInfoRepository extends BaseRequestRepository implements IRepository {

    public registerMethod = (): void => {
        this.server.method({
            name: 'Regis.getProfileInfo',
            method: this.getProfileInfo,
            options: {
                callback: false
            }
        })
    }

    private getProfileInfo = (request: any) => {
        let profileQueryOptions: getProfileInfoParams = {
          locationCode: request.payload.locationCode
        }
    
        // console.log('request', request);
        return this._queryProfileInfo(request, profileQueryOptions)
    }

    private _queryProfileInfo = (request: IRequest, profileQueryOptions: getProfileInfoParams) => {
        let reqOptions = this._getReqOptionsGet(request)
        let now = Moment()
        reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
        reqOptions['rejectUnauthorized'] = false
    
        reqOptions['uri'] =
          this.options['baseUrl'] +
          this.options.urlList['x-path-getProfileInfo'] +
          '?locationCode=' +
          profileQueryOptions.locationCode
        reqOptions['headers']['Content-Type'] = 'application/json'
        reqOptions['json'] = true
        const loggerName = 'tdm-service'
        return this.sendRequest(reqOptions, loggerName)
    }
}
