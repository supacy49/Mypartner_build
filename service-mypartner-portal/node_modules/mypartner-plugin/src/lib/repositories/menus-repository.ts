import * as Bluebird from "bluebird";
import * as Moment from 'moment'
import {BaseRequestRepository} from "./base-request-repository"
import {MenusParams, IRepository, IRequest} from "./../interfaces"
require('tls').DEFAULT_CIPHERS= 'RSA'

export class MenusRepository extends BaseRequestRepository implements IRepository {
    public registerMethod = (): void => {
        this.server.method({
            name: 'Regis.menus',
            method: this.menus,
            options: {
              callback: false
            }
        })
    }

    private menus = (request: any) => {
        let profileQueryOptions: MenusParams = {
          xAuthorization: request.payload.xAuthorization
        }
        // console.log('request', request);
        return this._queryMenus(request, profileQueryOptions)
    }    

    private _queryMenus = (request: IRequest, profileQueryOptions: MenusParams) => {
        let reqOptions = this._getReqOptionsPost(request)
        let now = Moment()
        reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
        reqOptions['uri'] = this.options['authUrl'] + this.options.urlList['x-path-menus']
        reqOptions['headers']['Content-Type'] = 'application/json'
        reqOptions['headers']['x-authorization'] = profileQueryOptions.xAuthorization
        reqOptions['body'] = {}
        reqOptions['json'] = true
        const loggerName = 'mychannel-service'
        return this.sendRequest(reqOptions, loggerName)
    }
}
