"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Moment = require("moment");
const base_request_repository_1 = require("./base-request-repository");
require('tls').DEFAULT_CIPHERS = 'RSA';
class CpcImageRepository extends base_request_repository_1.BaseRequestRepository {
    constructor() {
        super(...arguments);
        this.registerMethod = () => {
            this.server.method({
                name: 'Regis.cpcImage',
                method: this.cpcImage,
                options: {
                    callback: false
                }
            });
        };
        this.cpcImage = (request) => {
            let imageQueryOptions = {
                consumer: request.payload.consumer,
                brand: request.payload.brand,
                model: request.payload.model,
                sku: request.payload.sku,
            };
            // console.log('request', request);
            return this._queryCpcImage(request, imageQueryOptions);
        };
        this._queryCpcImage = (request, imageQueryOptions) => {
            let reqOptions = this._getReqOptionsPost(request);
            let now = Moment();
            reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer';
            reqOptions['uri'] = this.options['cpcUrl'] + this.options.urlList['x-path-cpcImage'];
            reqOptions['headers']['Content-Type'] = 'application/json';
            reqOptions['body'] = {
                consumer: imageQueryOptions.consumer,
                brand: imageQueryOptions.brand,
                model: imageQueryOptions.model,
                sku: imageQueryOptions.sku,
            };
            reqOptions['json'] = true;
            const loggerName = 'cpc-service';
            return this.sendRequest(reqOptions, loggerName);
        };
    }
}
exports.CpcImageRepository = CpcImageRepository;
//# sourceMappingURL=cpc-image-repository.js.map