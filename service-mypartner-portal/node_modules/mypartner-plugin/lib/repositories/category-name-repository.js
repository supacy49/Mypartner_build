"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Moment = require("moment");
const base_request_repository_1 = require("./base-request-repository");
require('tls').DEFAULT_CIPHERS = 'RSA';
class CategoryNameRepository extends base_request_repository_1.BaseRequestRepository {
    constructor() {
        super(...arguments);
        this.registerMethod = () => {
            this.server.method({
                name: 'Regis.getCategoryName',
                method: this.getCategoryName,
                options: {
                    callback: false
                }
            });
        };
        this.getCategoryName = (request) => {
            let profileQueryOptions = {
                listCompany: request.payload.listCompany,
                distChannel: request.payload.distChannel,
                customerGroup: request.payload.customerGroup,
                dealerCode: request.payload.dealerCode
            };
            // console.log('request', request);
            return this._queryGetCategoryName(request, profileQueryOptions);
        };
        this._queryGetCategoryName = (request, profileQueryOptions) => {
            let reqOptions = this._getReqOptionsPost(request);
            let now = Moment();
            // console.log('ConOtp =====>', this.options['authUrl'] + this.options.urlList['x-path-confirm-otp'])
            reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer';
            reqOptions['uri'] = this.options['baseUrl'] + this.options.urlList['x-path-getCategoryName'];
            reqOptions['headers']['Content-Type'] = 'application/json';
            reqOptions['body'] = {
                listCompany: profileQueryOptions.listCompany,
                distChannel: profileQueryOptions.distChannel,
                customerGroup: profileQueryOptions.customerGroup,
                dealerCode: profileQueryOptions.dealerCode
            };
            reqOptions['json'] = true;
            const loggerName = 'tdm-service';
            return this.sendRequest(reqOptions, loggerName);
        };
    }
}
exports.CategoryNameRepository = CategoryNameRepository;
//# sourceMappingURL=category-name-repository.js.map