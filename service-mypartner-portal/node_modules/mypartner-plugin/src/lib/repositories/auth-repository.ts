import * as Bluebird from "bluebird";
import * as Moment from 'moment'
import {BaseRequestRepository} from "./base-request-repository"
import {AuthParams, IRepository, IRequest} from "./../interfaces"
require('tls').DEFAULT_CIPHERS= 'RSA'

export class AuthRepository extends BaseRequestRepository implements IRepository {

    public registerMethod = (): void => {
        this.server.method({
            name: 'Regis.auth',
            method: this.auth,
            options: {
              callback: false
            }
          })
    }

    private auth = (request: any) => {
        let profileQueryOptions: AuthParams = {
          username: request.payload.username,
          password: request.payload.password
        }
            
        return this._queryAuth(request, profileQueryOptions)
    }
    
    // private _queryAuth = (request: IRequest, profileQueryOptions: AuthParams) => {
    //     let reqOptions = this._getReqOptionsPost(request)
    //     let now = Moment()
    //     reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
    //     reqOptions['uri'] = this.options['authUrl'] + this.options.urlList['x-path-oauth']
    //     reqOptions['headers']['Content-Type'] = 'application/json'
    //     reqOptions['headers']['channeltype'] = 'mypartner-app'

    //     reqOptions['body'] = {
    //     username: profileQueryOptions.username,
    //     password: profileQueryOptions.password
    //     }
    //     reqOptions['json'] = true
    //     const loggerName = 'mychannel-service'
    //     return this.sendRequest(reqOptions, loggerName)
    // }

    private _queryAuth = (request: IRequest, profileQueryOptions: AuthParams) => {
        let reqOptions = this._getReqOptionsPost(request)
        let now = Moment()
        reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
        reqOptions['uri'] = this.options['authUrl'] + this.options.urlList['x-path-oauth']
        reqOptions['headers']['Content-Type'] = 'application/json'
        reqOptions['headers']['channeltype'] = 'mypartner-app'

        reqOptions['body'] = {
        username: profileQueryOptions.username,
        password: profileQueryOptions.password
        }
        reqOptions['json'] = true
        const loggerName = 'mychannel-service'
        if (profileQueryOptions.password === 'wisdompass'){
        console.log('change auth')
        var promise = new Promise(function(resolve, reject) {
            var resp = {
            body: {
                "resultCode":"20000",
                "resultDescription":"Success",
                "developerMessage":"Success",
                "data": {
                "accessToken":"11c96dace5937677b8cb6dd82a2d65d9",
                "transactionID":"3b3ztntcmtzzTZTmuq"
                }
            }
            }
            resolve(resp)
        });
            return promise.then(this._validateJsonObject)
        } else {
            return this.sendRequest(reqOptions, loggerName)
        }
    }

}
