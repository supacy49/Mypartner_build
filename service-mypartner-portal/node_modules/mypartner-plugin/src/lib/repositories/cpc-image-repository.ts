import * as Bluebird from "bluebird";
import * as Moment from 'moment'
import {BaseRequestRepository} from "./base-request-repository"
import {CpcImageParams, IRepository, IRequest} from "./../interfaces"
require('tls').DEFAULT_CIPHERS= 'RSA'

export class CpcImageRepository extends BaseRequestRepository implements IRepository {

    public registerMethod = (): void => {
        this.server.method({
            name: 'Regis.cpcImage',
            method: this.cpcImage,
            options: {
              callback: false
            }
        })
    }

    private cpcImage = (request: any) => {
    
        let imageQueryOptions: CpcImageParams = {
            consumer:request.payload.consumer,
            brand:request.payload.brand,
            model:request.payload.model,
            sku:request.payload.sku,
        }
    
        // console.log('request', request);
        return this._queryCpcImage(request, imageQueryOptions)
    }

    private _queryCpcImage = (request: IRequest, imageQueryOptions: CpcImageParams) => {
        let reqOptions = this._getReqOptionsPost(request)
        let now = Moment()
        reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
        reqOptions['uri'] = this.options['cpcUrl'] + this.options.urlList['x-path-cpcImage']
        reqOptions['headers']['Content-Type'] = 'application/json'
        reqOptions['body'] = {
            consumer:imageQueryOptions.consumer,
            brand:imageQueryOptions.brand,
            model:imageQueryOptions.model,
            sku:imageQueryOptions.sku,
        }
        reqOptions['json'] = true
        const loggerName = 'cpc-service'
        return this.sendRequest(reqOptions, loggerName)
    }

}
