export class CronJob {
    constructor(cronTime: any, onTick: any, onComplete: any, startNow: any, timeZone: any, context: any, runOnInit: any, utcOffset: any, unrefTimeout: any, ...args: any[]);
    context: any;
    onComplete: any;
    cronTime: any;
    unrefTimeout: any;
    lastExecution: any;
    addCallback(callback: any): void;
    fireOnTick(): void;
    lastDate(): any;
    nextDate(): any;
    nextDates(i: any): any;
    setTime(time: any): void;
    start(): void;
    stop(): void;
}
export class CronTime {
    static aliases: {
        apr: number;
        aug: number;
        dec: number;
        feb: number;
        fri: number;
        jan: number;
        jul: number;
        jun: number;
        mar: number;
        may: number;
        mon: number;
        nov: number;
        oct: number;
        sat: number;
        sep: number;
        sun: number;
        thu: number;
        tue: number;
        wed: number;
    };
    static constraints: number[][];
    static monthConstraints: number[];
    static parseDefaults: string[];
    constructor(source: any, zone: any, utcOffset: any);
    source: any;
    zone: any;
    utcOffset: any;
    realDate: any;
    getTimeout(): any;
    sendAt(i: any): any;
    toJSON(): any;
}
export function job(cronTime: any, onTick: any, onComplete: any, startNow: any, timeZone: any, context: any, runOnInit: any, utcOffset: any, unrefTimeout: any): any;
export function sendAt(cronTime: any): any;
export function time(cronTime: any, timeZone: any): any;
export function timeout(cronTime: any): any;
