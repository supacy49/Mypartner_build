"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// import * as Cron from 'cron'
require('tls').DEFAULT_CIPHERS = 'RSA';
const schema_1 = require("./schema");
const profile_info_repository_1 = require("./repositories/profile-info-repository");
const item_payment_repository_1 = require("./repositories/item-payment-repository");
const order_tracking_detail_repository_1 = require("./repositories/order-tracking-detail-repository");
const order_tracking_repository_1 = require("./repositories/order-tracking-repository");
const bank_account_repository_1 = require("./repositories/bank-account-repository");
const auth_repository_1 = require("./repositories/auth-repository");
const login_repository_1 = require("./repositories/login-repository");
const confirm_otp_repository_1 = require("./repositories/confirm-otp-repository");
const category_name_repository_1 = require("./repositories/category-name-repository");
const menus_repository_1 = require("./repositories/menus-repository");
const update_payment_cash_repository_1 = require("./repositories/update-payment-cash-repository");
const update_payment_credit_repository_1 = require("./repositories/update-payment-credit-repository");
const user_repository_1 = require("./repositories/user-repository");
const category_trade_repository_1 = require("./repositories/category-trade-repository");
const product_catalog_repository_1 = require("./repositories/product-catalog-repository");
const trade_repository_1 = require("./repositories/trade-repository");
const split_order_repository_1 = require("./repositories/split-order-repository");
const create_order_repository_1 = require("./repositories/create-order-repository");
const check_po_repository_1 = require("./repositories/check-po-repository");
const cpc_image_repository_1 = require("./repositories/cpc-image-repository");
const announcement_repository_1 = require("./repositories/announcement-repository");
const search_api_repository_1 = require("./repositories/search-api-repository");
const vesion_check_repository_1 = require("./repositories/vesion-check-repository");
const release_order_1 = require("./repositories/release-order");
const ars_order_1 = require("./repositories/ars-order");
class SsbRegis {
    constructor(server, options) {
        this.init = () => {
            //  Get Method
            this.initSchema();
            let repositories = [
                new profile_info_repository_1.ProfileInfoRepository(this.server, this.options),
                new item_payment_repository_1.ItemPaymentRepository(this.server, this.options),
                new order_tracking_detail_repository_1.OrderTrackingDetailRepository(this.server, this.options),
                new order_tracking_repository_1.OrderTrackingRepository(this.server, this.options),
                new bank_account_repository_1.BankAccountRepository(this.server, this.options),
                new auth_repository_1.AuthRepository(this.server, this.options),
                new login_repository_1.LoginRepository(this.server, this.options),
                new confirm_otp_repository_1.ConfirmOtpRepository(this.server, this.options),
                new category_name_repository_1.CategoryNameRepository(this.server, this.options),
                new menus_repository_1.MenusRepository(this.server, this.options),
                new update_payment_cash_repository_1.UpdatePaymentCashRepository(this.server, this.options),
                new update_payment_credit_repository_1.UpdatePaymentCreditRepository(this.server, this.options),
                new user_repository_1.UserRepository(this.server, this.options),
                new category_trade_repository_1.CategoryTradeRepository(this.server, this.options),
                new product_catalog_repository_1.ProductCatalogRepository(this.server, this.options),
                new trade_repository_1.TradeRepository(this.server, this.options),
                new split_order_repository_1.SplitOrderRepository(this.server, this.options),
                new create_order_repository_1.CreateOrderRepository(this.server, this.options),
                new check_po_repository_1.CheckPORepository(this.server, this.options),
                new cpc_image_repository_1.CpcImageRepository(this.server, this.options),
                new announcement_repository_1.AnnouncementRepository(this.server, this.options),
                new search_api_repository_1.SearchApiRepository(this.server, this.options),
                new vesion_check_repository_1.VersionCheckRepository(this.server, this.options),
                new release_order_1.ReleaseOrderRepository(this.server, this.options),
                new ars_order_1.ArsOrderRepository(this.server, this.options)
            ];
            repositories.forEach((repository) => {
                repository.registerMethod();
            });
            var request = {};
            this.server.methods.Regis.cronJob(request);
        };
        this.initSchema = () => {
            let db = this.server.plugins['hapi-mongoose'].connection;
            let schema = new schema_1.Schema();
            schema.initUserSchema(db);
            schema.initProductSchema(db);
            schema.initArsLocationWhiteListSchema(db);
        };
        this.server = server;
        this.options = options;
    }
}
exports.default = SsbRegis;
//# sourceMappingURL=methods.js.map