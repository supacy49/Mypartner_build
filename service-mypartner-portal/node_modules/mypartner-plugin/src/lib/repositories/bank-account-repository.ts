import * as Bluebird from "bluebird";
import * as Moment from 'moment'
import {BaseRequestRepository} from "./base-request-repository"
import {getBankAccountParams, IRepository, IRequest} from "./../interfaces"
require('tls').DEFAULT_CIPHERS= 'RSA'

export class BankAccountRepository extends BaseRequestRepository implements IRepository {

    public registerMethod = (): void => {
        this.server.method({
            name: 'Regis.getBankAccount',
            method: this.getBankAccount,
            options: {
              callback: false
            }
        })      
    }

    private getBankAccount = (request: any) => {
        let profileQueryOptions: getBankAccountParams = {
          userName: request.payload.userName
        }

        return this._queryBackAccount(request, profileQueryOptions)
    }

    private _queryBackAccount = (request: IRequest, profileQueryOptions: getBankAccountParams) => {
        let reqOptions = this._getReqOptionsGet(request)
        let now = Moment()
        reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
        reqOptions['rejectUnauthorized'] = false
    
        reqOptions['uri'] =
          this.options['baseUrl'] +
          this.options.urlList['x-path-getBankAccount'] +
          '?userName=' +
          profileQueryOptions.userName
        reqOptions['headers']['Content-Type'] = 'application/json'
        reqOptions['json'] = true
        const loggerName = 'tdm-service'
        return this.sendRequest(reqOptions, loggerName)
      }
}
