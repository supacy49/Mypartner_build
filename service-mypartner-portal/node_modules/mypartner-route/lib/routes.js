"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const handlers_1 = require("./handlers");
const Configs = require("./route-additional-configs");
function init(server) {
    const handler = new handlers_1.default();
    server.route({ method: 'POST', path: '/api/getBankAccount', handler: handler.getBankAccount, config: Configs.getBankAccount });
    server.route({ method: 'POST', path: '/api/getProfileInfo', handler: handler.getProfileInfo, config: Configs.getProfileInfo });
    server.route({ method: 'POST', path: '/api/orderTracking', handler: handler.orderTracking, config: Configs.orderTracking });
    server.route({ method: 'POST', path: '/api/orderTrackingDetail', handler: handler.orderTrackingDetail, config: Configs.orderTrackingDetail });
    server.route({ method: 'POST', path: '/api/getItemPayment', handler: handler.getItemPayment, config: Configs.getItemPayment });
    server.route({ method: 'POST', path: '/api/updatePaymentCash', handler: handler.updatePaymentCash, config: Configs.updatePaymentCash });
    server.route({ method: 'POST', path: '/api/updatePaymentCredit', handler: handler.updatePaymentCredit, config: Configs.updatePaymentCredit });
    server.route({ method: 'POST', path: '/api/getCategoryName', handler: handler.getCategoryName, config: Configs.getCategoryName });
    server.route({ method: 'POST', path: '/api/getCategoryTrade', handler: handler.getCategoryTrade, config: Configs.getCategoryTrade });
    server.route({ method: 'POST', path: '/api/listProductCatalog', handler: handler.listProductCatalog, config: Configs.listProductCatalog });
    server.route({ method: 'POST', path: '/api/getTradeDetail', handler: handler.getTradeDetail, config: Configs.getTradeDetail });
    server.route({ method: 'POST', path: '/api/tradeFilter', handler: handler.tradeFilter, config: Configs.tradeFilter });
    server.route({ method: 'POST', path: '/api/calTradeNormal', handler: handler.calTradeNormal, config: Configs.calTradeNormal });
    server.route({ method: 'POST', path: '/api/splitOrder', handler: handler.splitOrder, config: Configs.splitOrder });
    server.route({ method: 'POST', path: '/api/createOrder', handler: handler.createOrder, config: Configs.createOrder });
    server.route({ method: 'POST', path: '/api/chkPODuplicate', handler: handler.chkPODuplicate, config: Configs.chkPODuplicate });
    server.route({ method: 'POST', path: '/api/cpcImage', handler: handler.cpcImage, config: Configs.cpcImage });
    server.route({ method: 'POST', path: '/api/auth', handler: handler.auth, config: Configs.auth });
    server.route({ method: 'POST', path: '/api/confirmOtp', handler: handler.confirmOtp, config: Configs.confirmOtp });
    server.route({ method: 'POST', path: '/api/login', handler: handler.login, config: Configs.login });
    server.route({ method: 'POST', path: '/api/menus', handler: handler.menus, config: Configs.menus });
    server.route({ method: 'POST', path: '/api/keepAlive', handler: handler.keepAlive, config: Configs.keepAlive });
    server.route({ method: 'POST', path: '/api/validateSession', handler: handler.validateSession, config: Configs.validateSession });
    server.route({ method: 'POST', path: '/api/saveUser', handler: handler.saveUser, config: Configs.saveUser });
    server.route({ method: 'POST', path: '/api/getUserToken', handler: handler.getUserToken, config: Configs.getUserToken });
    server.route({ method: 'POST', path: '/api/announcement', handler: handler.announcement, config: Configs.announcement });
    server.route({ method: 'POST', path: '/api/announcementDealer', handler: handler.announcementDealer, config: Configs.announcementDealer });
    server.route({ method: 'POST', path: '/api/searchApi', handler: handler.searchApi, config: Configs.searchApi });
    server.route({ method: 'POST', path: '/api/getEncryptToken', handler: handler.getEncryptToken, config: Configs.getEncryptToken });
    server.route({ method: 'POST', path: '/api/getSearchApi', handler: handler.getSearchApi, config: Configs.getSearchApi });
    server.route({ method: 'POST', path: '/api/getUpdateVersion', handler: handler.getUpdateVersion, config: Configs.getUpdateVersion });
    server.route({ method: 'POST', path: '/api/queryAccBlock', handler: handler.queryAccBlock, config: Configs.queryAccBlock });
    server.route({ method: 'POST', path: '/api/releaseOrder', handler: handler.releaseOrder, config: Configs.releaseOrder });
    server.route({ method: 'POST', path: '/api/getArsOrder', handler: handler.getArsOrder, config: Configs.getArsOrder });
    server.route({ method: 'POST', path: '/api/exportArs', handler: handler.exportArs, config: Configs.exportArs });
    server.route({ method: 'POST', path: '/api/arslocation', handler: handler.arslocation, config: Configs.arslocation });
}
exports.init = init;
//# sourceMappingURL=routes.js.map