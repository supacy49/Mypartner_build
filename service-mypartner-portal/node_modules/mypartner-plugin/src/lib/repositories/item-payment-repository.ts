import * as Bluebird from "bluebird";
import * as Moment from 'moment'
import {BaseRequestRepository} from "./base-request-repository"
import {getItemPaymentParams, IRepository, IRequest} from "./../interfaces"
require('tls').DEFAULT_CIPHERS= 'RSA'

export class ItemPaymentRepository extends BaseRequestRepository implements IRepository {

    public registerMethod = (): void => {
        this.server.method({
            name: 'Regis.getItemPayment',
            method: this.getItemPayment,
            options: {
              callback: false
            }
        })
    }

    private getItemPayment = (request: any) => {
        let profileQueryOptions: getItemPaymentParams = {
          dealerCode: request.payload.dealerCode,
          type: request.payload.type,
          userName: request.payload.userName
        }
    
        // console.log('request', request);
        return this._queryItemPayment(request, profileQueryOptions)
    }

    private _queryItemPayment = (request: IRequest, profileQueryOptions: getItemPaymentParams) => {
        let reqOptions = this._getReqOptionsGet(request)
        reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
        reqOptions['rejectUnauthorized'] = false
    
        reqOptions['uri'] =
          this.options['baseUrl'] +
          this.options.urlList['x-path-getItemPayment'] +
          '?dealerCode=' +
          profileQueryOptions.dealerCode +
          '&type=' +
          profileQueryOptions.type +
          '&userName=' +
          profileQueryOptions.userName
        reqOptions['headers']['Content-Type'] = 'application/json'
        reqOptions['json'] = true
        const loggerName = 'tdm-service'
        return this.sendRequest(reqOptions, loggerName)
      }

}
