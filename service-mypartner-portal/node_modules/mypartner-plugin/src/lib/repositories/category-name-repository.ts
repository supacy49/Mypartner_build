import * as Bluebird from "bluebird";
import * as Moment from 'moment'
import {BaseRequestRepository} from "./base-request-repository"
import {GetCategoryNameParams, IRepository, IRequest} from "./../interfaces"
require('tls').DEFAULT_CIPHERS= 'RSA'

export class CategoryNameRepository extends BaseRequestRepository implements IRepository {

    public registerMethod = (): void => {
        this.server.method({
            name: 'Regis.getCategoryName',
            method: this.getCategoryName,
            options: {
              callback: false
            }
        })
    }

    private getCategoryName = (request: any) => {
        let profileQueryOptions: GetCategoryNameParams = {
          listCompany:request.payload.listCompany,
          distChannel :request.payload.distChannel,
          customerGroup :request.payload.customerGroup,
          dealerCode:request.payload.dealerCode
        }
    
        // console.log('request', request);
        return this._queryGetCategoryName(request, profileQueryOptions)
    }

    private _queryGetCategoryName = (request: IRequest, profileQueryOptions: GetCategoryNameParams) => {
        let reqOptions = this._getReqOptionsPost(request)
        let now = Moment()
        // console.log('ConOtp =====>', this.options['authUrl'] + this.options.urlList['x-path-confirm-otp'])
        reqOptions['certificate'] = 'tradingservice3.ais.co.th_2017.cer'
        reqOptions['uri'] = this.options['baseUrl'] + this.options.urlList['x-path-getCategoryName']
        reqOptions['headers']['Content-Type'] = 'application/json'
        reqOptions['body'] = {
          listCompany:profileQueryOptions.listCompany,
          distChannel :profileQueryOptions.distChannel,
          customerGroup :profileQueryOptions.customerGroup,
          dealerCode:profileQueryOptions.dealerCode
        }
        reqOptions['json'] = true
        const loggerName = 'tdm-service'
        return this.sendRequest(reqOptions, loggerName)
      }
    
    
}
